input length
input chord (list of pitch classes)

if length of chord seq is less than length
   	cond intervals of chord are 0, 4, 3
   	     apply a random function from list to "last" (0 -1 0) (1 0 1) (0 0 2) (1 0 2) (-1 -1 1) (0 1 2)(0 1 1) (0 -1 2) (1 0 3) (-2 -3 0) (-1 -1 0) (0 0 1)
	     append result to list
	     if length of chord seq is less than length, run main function again
	     else return entire list

cond intervals of chord are 0, 3, 4
     	     apply a random function from list (0 1 0) (-1 0 -1) (0 0 1) (-1 0 1) (-1 -1 0) (0 2 1) (0 2 2) (-2 -2 0) (-1 -1 1) (-1 0 0) (0 1 1))
	     	     append result to list
	     if length of chord seq is less than length, run main function again
	     	     else return entire list

cond intervals of chord are 0, 3, 5
	     apply a random function from list (0 0 1) (-1 0 -2) (1 2 0) (1 1 0) (-1 0 0) (0 1 1) (-1 1 0) (0 2 0) (0 2 1) (-1 -1 0) (0 0 1) (0 1 0) (-1 0 -1)
	     	     append result to list
	     if length of chord seq still is less than length, run main function again
	     	     else return entire list
	     
cond intervals of chord are 0, 4, 5
	     apply a random function from list (0 0 -2) (2 1 0) (2 2 0) (0 -1 -1) (1 0 0) (-1 0 -2) (-1 0 -1) (0 1 0) (0 1 -1) (1 2 0) (0 -1 0) (1 0 1) (0 0 -1) (1 1 0)
	     	     	     append result to list
	     if length of chord seq still is less than length, run main function again
	     	     else return entire list
	     
	cond intervals of chord are 0, 5, 4
	     apply a random function from list (0 -1 -2) (0 -2 -2) (1 0 -1) (2 0 0) (2 1 0) (0 -1 0) (1 -1 0) (1 0 1) (2 0 1) (0 0 -1) (1 1 0) (0 -2 0) (2 0 2) (1 0 0) (0 -1 -1)
	     	     	     append result to list
	     if length of chord seq still is less than length, run main function again
	     	     else return entire list
	     
	 cond intervals of chord are 0, 5, 3
	      apply a random function from list (0 -1 -1) (0 -2 -1) (1 0 0) (1 -1 0) (2 0 1) (-1 -2 0) (0 -2 0) (1 0 2) (1 -1 1) (2 0 2) (-1 -1 0) (0 0 1) (-1 -3 0) (0 -2 1) (0 -1 0) (1 0 1)
	      	     	     append result to list
	     if length of chord seq still is less than length, run main function again
	     	     else return entire list
	     
     	 cond intervals of chord are 0, 4, 4
	      apply a random function from list (0 0 -1) (0 -1 -1) (1 1 0) (1 0 0) (-1 -1 0) (0 -1 0) (1 0 1) (0 0 1) (-1 0 0) (-1 0 -1) (0 1 0) (0 1 1) (-1 -2 0) (0 -1 1) (1 0 2)
	      	     	     append result to list
	     if length of chord seq still is less than length, run main function again
	     	     else return entire list
	     
	 cond intervals of chord are 0, 3, 3,
	      apply a random function from list (-1 0 -3) (0 0 -2) (2 2 0) (2 3 0) (0 1 -2) (1 1 0) (0 0 -1) (-1 0 -1) (0 1 0) (-2 0 -3) (0 2 0) ( 0 2 -1) (1 3 0) (-1 0 -2) (0 1 -1) (1 2 0)
       	     append result to list
	     	     if length of chord seq still is less than length, run main function again
	     	     else return entire list
